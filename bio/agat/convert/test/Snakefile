from snakemake.remote import HTTP

https = HTTP.RemoteProvider(allow_redirects=True)


rule test_agat_convert_bed2gff:
    input:
        bed=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/test.bed"),
    output:
        "bed.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_bed2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_embl2gff:
    input:
        embl=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/agat_convert_embl2gff_1.embl"),
    output:
        "embl.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_embl2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_genscan2gff:
    input:
        genscan=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/test.genscan"),
    output:
        "genscan.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_genscan2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_mfannot2gff:
    input:
        mfannot=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/test.mfannot"),
    output:
        "mfannot.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_mfannot2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_bam2gff:
    input:
        minimap2=https.remote("https://github.com/NBISweden/AGAT/raw/master/t/scripts_output/in/test_minimap2.bam"),
    output:
        "bam.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_bam2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_sam2gff:
    input:
        minimap2=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/test_minimap2.sam"),
    output:
        "sam.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_sam2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_gff2gtf:
    input:
        gxf=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/0.gff"),
    output:
        "gff.gtf",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_gff2gtf.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_gtf2gff:
    input:
        gxf=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/test_kraken.gtf"),
    output:
        "gtf.gff",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_gtf2gff.log"
    wrapper:
        "master/bio/agat/convert"


rule test_agat_convert_gff2tsv:
    input:
        gxf=https.remote("https://raw.githubusercontent.com/NBISweden/AGAT/master/t/scripts_output/in/0.gff"),
    output:
        "gff.tsv",
    threads: 1
    params:
        extra="",
    log:
        "logs/test_agat_convert_gff2tsv.log"
    wrapper:
        "master/bio/agat/convert"