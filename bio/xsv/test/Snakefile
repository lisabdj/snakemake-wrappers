### Concatenation subcommand ###
rule test_xsv_cat_rows:
    input:
        table=["table.csv", "right.csv"],
        # Optional CSV indexed may be given below
    output:
        "catrows.csv",
    threads: 1
    log:
        "xsv/catrow.log",
    params:
        subcommand="cat rows",
        extra="",
    wrapper:
        "master/bio/xsv"


rule test_xsv_cat_cols:
    input:
        table=["table.csv", "right.csv"],
        # Optional CSV indexed may be given below
    output:
        "catcols.csv",
    threads: 1
    log:
        "xsv/catcol.log",
    params:
        subcommand="cat columns",
        extra="",
    wrapper:
        "master/bio/xsv"


### Count subcommand ###
rule test_xsv_count:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "count.csv",
    threads: 1
    log:
        "xsv/count.log",
    params:
        subcommand="count",
        extra="",
    wrapper:
        "master/bio/xsv"


### Fix lengths subcommand ###
rule test_xsv_fixlength:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "fixlength.csv",
    threads: 1
    log:
        "xsv/fixlength.log",
    params:
        subcommand="fixlengths",
        length=20,
        extra="",
    wrapper:
        "master/bio/xsv"


### Flatten subcommand ###
rule test_xsv_flatten:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "flatten.csv",
    threads: 1
    log:
        "xsv/flatten.log",
    params:
        subcommand="flatten",
        extra="",
    wrapper:
        "master/bio/xsv"


### Format subcommand ###
rule test_xsv_fmt:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "fmt.tsv",
    threads: 1
    log:
        "xsv/fmt.log",
    params:
        subcommand="fmt",
        extra="",
    wrapper:
        "master/bio/xsv"


### Frequency subcommand ###
rule test_xsv_frequency:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "frequency.csv",
    threads: 1
    log:
        "xsv/frequency.log",
    params:
        subcommand="frequency",
        extra="",
    wrapper:
        "master/bio/xsv"


### Headers subcommand ###
rule test_xsv_headers:
    input:
        table="table.csv",
        # Optional CSV indexed may be given below
    output:
        "headers.csv",
    threads: 1
    log:
        "xsv/headers.log",
    params:
        subcommand="headers",
        extra="",
    wrapper:
        "master/bio/xsv"


rule test_xsv_headers_list:
    input:
        table=["table.csv", "right.csv"],
        # Optional CSV indexed may be given below
    output:
        "headers_all.csv",
    threads: 1
    log:
        "xsv/headers.log",
    params:
        subcommand="headers",
        extra="",
    wrapper:
        "master/bio/xsv"


### Index subcommand ###
rule test_xsv_index:
    input:
        table="table.csv",
    output:
        "table.csv.idx",
    threads: 1
    log:
        "xsv/index.log",
    params:
        subcommand="index",
        extra="",
    wrapper:
        "master/bio/xsv"


### Input subcommand ###
rule test_xsv_input:
    input:
        table="table.csv",
    output:
        "input.csv",
    threads: 1
    log:
        "xsv/input.log",
    params:
        subcommand="input",
        extra="",
    wrapper:
        "master/bio/xsv"


### Join subcommand ###
rule test_xsv_join_cols_as_list:
    input:
        table=["table.csv", "right.csv"],
    output:
        "join.list.csv",
    threads: 1
    log:
        "xsv/join.log",
    params:
        subcommand="join",
        left_columns="gene_id",
        right_columns="gene_id",
        extra="",
    wrapper:
        "master/bio/xsv"


rule test_xsv_join:
    input:
        # Faster with indexed table
        table=["table.csv", "right.csv"],
    output:
        "join.csv",
    threads: 1
    log:
        "xsv/join.log",
    params:
        subcommand="join",
        left_columns=["gene_id"],
        right_columns=["gene_id"],
        extra="",
    wrapper:
        "master/bio/xsv"


### Sample subcommand ###
rule test_xsv_sample:
    input:
        table="table.csv",  # Faster with indexed table
    output:
        "sample.csv",
    threads: 1
    log:
        "xsv/sample.log",
    params:
        subcommand="sample",
        sample_size=1,
        extra="",
    wrapper:
        "master/bio/xsv"


### Search subcommand ###
rule test_xsv_search:
    input:
        table="table.csv",  # Faster with indexed table
    output:
        "search.csv",
    threads: 1
    log:
        "xsv/search.log",
    params:
        subcommand="search",
        regex="ENSG[0-9]+",
        extra="",
    wrapper:
        "master/bio/xsv"


### Select subcommand ###
rule test_xsv_select:
    input:
        table="table.csv",  # Faster with indexed table
    output:
        "select.csv",
    threads: 1
    log:
        "xsv/select.log",
    params:
        subcommand="select",
        selection="3-",
        extra="",
    wrapper:
        "master/bio/xsv"


### Slice subcommand ###
rule test_xsv_slice:
    input:
        table="table.csv",  # Faster with indexed table
    output:
        "slice.csv",
    threads: 1
    log:
        "xsv/slice.log",
    params:
        subcommand="slice",
        extra="-i 2",
    wrapper:
        "master/bio/xsv"


### Sort subcommand ###
rule test_xsv_sort:
    input:
        table="table.csv",
    output:
        "sort.csv",
    threads: 1
    log:
        "xsv/sort.log",
    params:
        subcommand="sort",
        extra="",
    wrapper:
        "master/bio/xsv"


### Split subcommand ###
rule test_xsv_split:
    input:
        table="table.csv",  # Faster with indexed table
    output:
        directory("split.csv"),
    threads: 1
    log:
        "xsv/split.log",
    params:
        subcommand="split",
        extra="",
    wrapper:
        "master/bio/xsv"


### TODO Table
