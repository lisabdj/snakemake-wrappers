from pathlib import Path
import os

workflow_source_dir = Path(os.path.relpath(snakemake.workflow.srcdir("."), "."))


include: "rules/000.common.smk"


rule target:
    input:
        unpack(targets),


rule variants_only:
    input:
        multiqc="data_output/MultiQC/Somatic_Variant_Calling.html",
        vcfs=expand("data_output/VCF/{sample}.vcf.gz", sample=sample_list),
        vcf_tbis=expand("data_output/VCF/{sample}.vcf.gz.tbi", sample=sample_list),
        vcf_xlsx=expand("data_output/XLSX/{sample}.xlsx", sample=sample_list),
        vcf_tsv=expand("data_output/TSV/{sample}.tsv", sample=sample_list),
        tmb="data_output/TMB.tsv",
        msi="data_output/MSI.tsv",
        cnv=expand("data_output/CNV/{sample}.tsv", sample=sample_list),


rule cnv_only:
    input:
        cnv=expand("data_output/CNV/{sample}.tsv", sample=sample_list),
        multiqc="data_output/MultiQC/MappingQC.html",


rule tmb_only:
    input:
        tmb="data_output/TMB.tsv",
        multiqc="data_output/MultiQC/Somatic_Variant_Calling.html",


rule msi_only:
    input:
        msi="data_output/MSI.tsv",
        multiqc="data_output/MultiQC/MappingQC.html",


rule mapping_only:
    input:
        multiqc="data_output/MultiQC/MappingQC.html",


rule fusions_only:
    input:
        multiqc="data_output/MultiQC/FusionsQC.html",


#####################
### Final archive ###
#####################


include: "rules/028.md5.smk"
include: "rules/024.archive.smk"


###############
### Fusions ###
###############


include: "rules/025.star_chimera.smk"
include: "rules/026.star_fusions.smk"


###############################
### TSV and Xlsx formatting ###
###############################


include: "rules/018.vcf2tsv.smk"


#################
### Gather QC ###
#################


include: "rules/016.mapping_qc.smk"
include: "rules/017.multiqc.smk"


######################
### MSI sensor pro ###
######################


include: "rules/022.msisensor.smk"


###########
### TMB ###
###########


include: "rules/021.tmb.smk"


##################
### CNV Facets ###
##################


include: "rules/020.cnv_facets.smk"
include: "rules/023.annot_sv.smk"


###########################
### VCF FILE INDEXATION ###
###########################


include: "rules/019.tabix.smk"


######################
### VCF annotation ###
######################


include: "rules/010.snpeff.smk"
include: "rules/012.snpsift.smk"
include: "rules/015.occurence.smk"
include: "rules/011.spliceai.smk"
include: "rules/013.vcftools.smk"
include: "rules/014.bigr.annot.smk"


############################################################################
### Correcting Mutect2 :                                                 ###
### AS_FilterStatus: Number=1 and not Number=A which violates VCF format ###
############################################################################

###############################
### Variant calling Mutect2 ###
###############################


include: "rules/009.gatk.mutect2.smk"


##############################
### GATK BAM RECALIBRATION ###
##############################


include: "rules/007.gatk.recal.smk"


#####################
### Deduplicating ###
#####################


include: "rules/006.sambamba.markdup.smk"


# Filter a bam over the capturekit bed file


include: "rules/005.samtools.filter.smk"


###################
### BWA MAPPING ###
###################


include: "rules/003.bwa.fixmate.smk"


############################
### FASTP FASTQ CLEANING ###
############################


include: "rules/002.fastp.trimming.smk"


#################################################
### Gather files from iRODS or mounting point ###
#################################################


include: "rules/001.bigr_copy.smk"


###########################
### Datasets indexation ###
###########################


include: "rules/004.sambamba.index.smk"
